<?xml version="1.0" encoding="UTF-8"?>
<!--设置log4j2的自身log级别为warn-->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，
    当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="warn">
	<!--
              %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
              %t：线程名称
              %p：日志级别
              %c : 日志消息所在类名
              %m : 日志内容，即 logger.info("message")
              %n : 换行符
              %C : Java类名
              %L : 日志输出所在行数
              %M : 日志输出所在方法名
              hostName : 本地机器名
              hostAddress : 本地ip地址
           -->
    <appenders>
        <!--输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] - [%p] - %c.%M():%L - %m%n"/>
        </console>
		
		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用
        <File name="log" fileName="log/test.log" append="false">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </File>-->

		 <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <!-- 设置日志格式并配置日志压缩格式(eg: info-2017-02-12-1.log.gz) -->
        <RollingFile name="RollingFileInfo" fileName="${sys:user.home}/logs/ggjsc-info.log"
                     filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/ggjsc-info-%d{yyyy-MM-dd}-%i.log">
            <Filters>
            	<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
                <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
                <ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL"/>
            </Filters>
            
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] - [%p] - %c.%M():%L - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="20 MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
            <!-- <DefaultRolloverStrategy max="20"/> -->
        </RollingFile>

        <RollingFile name="RollingFileError" fileName="${sys:user.home}/logs/ggjsc-error.log"
                     filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/ggjsc-error-%d{yyyy-MM-dd}-%i.log">
            <ThresholdFilter level="ERROR"/>
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] - [%p] - %c.%M():%L - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="20 MB"/>
            </Policies>
        </RollingFile>
    </appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--过滤掉spring和mybatis的一些无用的debug信息-->
        <logger name="org.springframework" level="INFO"/>
        <logger name="org.apache.http" level="WARN"/>
        <logger name="org.mybatis" level="DEBUG"/>
        <logger name="com.zaxxer.hikari" level="INFO"/>
        
        <!-- 服务error级别日志设置
        <logger name="com.johnfnash.learn.pro.config">
            <appender-ref ref="RollingFileError"/>
        </logger> -->

        <!-- 配置日志的根节点 -->
        <root level="DEBUG">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileError"/>
        </root>
    </loggers>

</configuration>